Вся информация тут: https://www.youtube.com/watch?v=FDfvuNbSs4U

1. Основная информация.

NPM - Node Package Manager, серверный язык программирования для работы с файлами, БД, HTTP запросами и т.д.
Весь его функционал разбит на отдельные группы файлов, их можно подключать по мере необходимости, также писать свои модули
и делиться в публичном репозитории.

2. Установка NPM.

Находим нужный дистрибутив,
Запускаем файл и следуем инструкции (мы установливаем NodeJS),
Чтобы проверить его доступность выполняем команду в терминале VSCode: node -v ,
Чтобы проверить NPM, который поставляется вместе с NodeJS выполняем комануд npm -v ,

3. Инициализация проекта.

Для того, чтобы иницилизировать проект нужно ответить на ряд вопросов,
После этого в корне нашего проекта будет создан файл заполненный введёнными данными.
npm init - инициализировать проект.
npm init --yes для быстрой инициализации (файл будет создан автоматически со всем значениями по умолчанию).

4. Поиск пакетов.

Пакеты мы можем искать как через сайт, так и прямо в консоли, для этого есть команда search(s) "название пакета".
Для просмотра подробной информации использовать команду npm view "название пакета".
Для открытия репозитория на GitHub использовать команду repo "название пакета".
Для перехода на домашнюю страницу пакета использовать команду home "название пакета".
Поиск можно производить по нескольким словам, для этого можно взять их в кавычки. Пример: npm search(s) "название название".

5. Установка пакета.

Для того, чтобы установить пакет использовать команду npm install(i) "название пакета".

6. Виды зависимостей.

Если мы, например забудем подключить нужный пакет на продакшене, либо просто потеряем его - весь проект сломается.
В файле package.json (будет создан при инициализации проекта), есть строка "dependencies", в нём указываются наши основные используемые пакеты.
Существует 2 основных вида зависимостей: Dependencies и DevDependencies, первые - необходимые нам в продакшене.
Чтобы добавить пакет в dependencies достаточно при установки добавить --save-prod или -P.
Вторые (DevDependencies) используются непосредственно при разработке, работа нашего проекта никак от них не зависит и мы можем не переносить их в продакшен.
Чтобы их сохранить, нужно добавить им --save-dev или -D,
Они будут сохранены в новосозданный блок в package.json в DevDependencies.

7. Директория node_modules.

В директоии node_modules есть много папок, это потому что каждый из пакетов требует ещё больше пакетов для работы.
Чтобы увидеть иерархию всех пакетов используем команду list.
Если добавить --depth=0 мы увидим только наши пакеты.